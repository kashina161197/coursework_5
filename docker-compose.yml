version: "3"

services:
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: "POSTGRES_DB"
      POSTGRES_USER: "POSTGRES_USER"
      POSTGRES_PASSWORD: "POSTGRES_PASSWORD"
      POSTGRES_HOST: "POSTGRES_HOST"
      POSTGRES_PORT: "POSTGRES_PORT"
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
     - "8000:8000"
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env


  celery:
    build: .
    tty: true
    command: celery -A config worker --loglevel=info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat --loglevel=info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env


volumes:
  pg_data:
